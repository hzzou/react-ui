var _templateObject;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import styled from "styled-components";
var StylesWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([" \n  .virtual-table {\n    border: 1px solid #dedede;\n    color: #333;\n    width: 100%;\n    .table {\n      position: relative;\n      overflow: auto;\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      .thead,\n      .tbody {\n        width: 100%;\n        .tr {\n          display: flex;\n          width: 100%;\n          cursor: pointer;\n          margin: 0;\n          padding: 0;\n          .th,\n          .td {\n            list-style: none;\n            padding: 10px;\n            box-sizing: border-box;\n            border-right: 1px solid #999;\n            line-height: 1em;\n            &:last-of-type {\n              border-right: none;\n            }\n            input{\n              \n            }\n          }\n        }\n      }\n\n      .thead {\n        top: 0;\n        z-index: 10000;\n        .tr {\n          background-color: #dedede;\n          .th {\n            font-weight: bold;\n          }\n        }\n      }\n      .tbody {\n        .default{\n          width: 100%;\n          height: 100%;\n          color: #999;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        .tr {\n          position: absolute;\n          border-bottom: 1px solid #dedede;\n          &:last-of-type {\n            border-bottom: none;\n          }\n          .td {\n            border-color: #dedede;\n          }\n        }\n        .item-odd {\n          background-color: #fff;\n        }\n        .item-even {\n          background-color: #eee;\n        }\n      }\n    }\n  }\n"])));
export default StylesWrapper;